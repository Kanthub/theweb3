{"abi":[],"bytecode":{"object":"0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220d86020ae65b404e5848caeb7b2ce33b54a916a660e34305af151ed415764f84664736f6c63430008180033","sourceMap":"584:8747:81:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x5f80fdfea2646970667358221220d86020ae65b404e5848caeb7b2ce33b54a916a660e34305af151ed415764f84664736f6c63430008180033","sourceMap":"584:8747:81:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:attribution\":\"https://github.com/hamdiallam/Solidity-RLP\",\"kind\":\"dev\",\"methods\":{},\"title\":\"RLPReader\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"RLPReader is a library for parsing RLP-encoded byte arrays into Solidity types. Adapted         from Solidity-RLP (https://github.com/hamdiallam/Solidity-RLP) by Hamdi Allam with         various tweaks to improve readability.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/rlp/RLPReader.sol\":\"RLPReader\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@/=src/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@script/=script/\",\":@test/=test/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/libraries/rlp/RLPErrors.sol\":{\"keccak256\":\"0x2b7fa174e6c62962f7c3ce1960298d325ed0e5ff4ee3fd426848e88b4500eb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5528dd355691e6e2dffa3ecf11388f51e3bd29f27693c5dcd11be182559ba47\",\"dweb:/ipfs/QmTqZ5ZzBPwLYg3JNZttHZYaXv5zyzQfakSz4B8sYkAz42\"]},\"src/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0xaa010fd014790a150d4db8d519940ce4b2828a8591c247469f246e5c177b2350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2702c2a0413fcdf2ed57af6dc5ffcf5f5b155fdbba0bb52375c037f06c4b2456\",\"dweb:/ipfs/QmW6kTq8pj3LTmYRHr7CqsZb157XmXUzHJzEkMgeBAr4EJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@/=src/","@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/openzeppelin-contracts/","@script/=script/","@test/=test/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/rlp/RLPReader.sol":"RLPReader"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/libraries/rlp/RLPErrors.sol":{"keccak256":"0x2b7fa174e6c62962f7c3ce1960298d325ed0e5ff4ee3fd426848e88b4500eb26","urls":["bzz-raw://f5528dd355691e6e2dffa3ecf11388f51e3bd29f27693c5dcd11be182559ba47","dweb:/ipfs/QmTqZ5ZzBPwLYg3JNZttHZYaXv5zyzQfakSz4B8sYkAz42"],"license":"MIT"},"src/libraries/rlp/RLPReader.sol":{"keccak256":"0xaa010fd014790a150d4db8d519940ce4b2828a8591c247469f246e5c177b2350","urls":["bzz-raw://2702c2a0413fcdf2ed57af6dc5ffcf5f5b155fdbba0bb52375c037f06c4b2456","dweb:/ipfs/QmW6kTq8pj3LTmYRHr7CqsZb157XmXUzHJzEkMgeBAr4EJ"],"license":"MIT"}},"version":1},"id":81}